---
import { FaArrowLeft, FaExternalLinkAlt, FaGithub } from 'react-icons/fa';

import { Footer } from '@/partials/Footer';
import { Navbar } from '@/partials/Navbar';
import Base from '@/templates/Base.astro';
import { AppConfig } from '@/utils/AppConfig';

export interface Props {
  project: {
    name: string;
    description: string;
    fullDescription?: string;
    link: string;
    repoLink?: string;
    img: {
      src: string;
      alt: string;
    };
    images?: {
      src: string;
      alt: string;
    }[];
    technologies: string[];
    features?: string[];
    challenges?: string[];
    lessons?: string[];
  };
}

const { project } = Astro.props;
---

<Base
  head={{
    title: `${project.name} - ${AppConfig.site_name}`,
    description: project.description,
  }}
>
  <Navbar client:load />

  <main class='min-h-screen bg-neutral-900 pt-20'>
    <div class='container mx-auto px-4 py-12 sm:px-6 lg:px-8'>
      <!-- Back Button -->
      <a
        href='/#projects-section'
        class='mb-8 inline-flex items-center text-emerald-400 transition-colors duration-200 hover:text-emerald-300'
      >
        <FaArrowLeft className='mr-2' />
        Back to Projects
      </a>

      <!-- Project Header -->
      <div class='mb-12'>
        <h1 class='mb-4 text-4xl font-bold text-white sm:text-5xl'>
          {project.name}
        </h1>
        <p class='mb-6 text-xl text-gray-300'>{project.description}</p>

        <div class='flex space-x-4'>
          <a
            href={project.link}
            target='_blank'
            rel='noopener noreferrer'
            class='inline-flex items-center rounded-lg bg-emerald-600 px-6 py-3 !text-white transition-colors duration-200 hover:bg-emerald-700'
          >
            <FaExternalLinkAlt className='mr-2' />
            Live Demo
          </a>
          {project.repoLink && (
            <a
              href={project.repoLink}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center rounded-lg bg-indigo-500 px-6 py-3 !text-white transition-colors duration-200 hover:bg-neutral-700"
            >
              <FaGithub className="mr-2" />
              View Code
            </a>
          )}
        </div>
      </div>

      <!-- Main Content -->
      <div class='grid grid-cols-1 gap-12 lg:grid-cols-3'>
        <!-- Left Column - Project Details -->
        <div class='space-y-12 lg:col-span-2'>
          <!-- Hero Image -->
          <div class='overflow-hidden rounded-xl border border-neutral-700'>
            <img
              src={project.img.src}
              alt={project.img.alt}
              class='h-auto w-full'
            />
          </div>

          <!-- Full Description -->
          {project.fullDescription && (
            <div class="prose prose-emerald prose-invert max-w-none">
              <h2 class="mb-4 text-2xl font-bold text-white">
                About the Project
              </h2>
              <p class="whitespace-pre-line text-gray-300">
                {project.fullDescription}
              </p>
            </div>
          )}

          <!-- Features -->
          {project.features && project.features.length > 0 && (
            <div>
              <h2 class="mb-4 text-2xl font-bold text-white">Key Features</h2>
              <ul class="space-y-3">
                {project.features.map((feature) => (
                  <li class="flex items-start">
                    <span class="mr-2 text-emerald-400">•</span>
                    <span class="text-gray-300">{feature}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          <!-- Additional Images -->
          {project.images && project.images.length > 0 && (
            <div>
              <h2 class="mb-4 text-2xl font-bold text-white">Screenshots</h2>
              <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
                {project.images.map((image) => (
                  <div class="overflow-hidden rounded-lg border border-neutral-700">
                    <img
                      src={image.src}
                      alt={image.alt}
                      class="h-auto w-full"
                    />
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- Challenges & Solutions -->
          {project.challenges && project.challenges.length > 0 && (
            <div>
              <h2 class="mb-4 text-2xl font-bold text-white">
                Challenges & Solutions
              </h2>
              <ul class="space-y-3">
                {project.challenges.map((challenge) => (
                  <li class="flex items-start">
                    <span class="mr-2 text-emerald-400">•</span>
                    <span class="text-gray-300">{challenge}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          <!-- Lessons Learned -->
          {project.lessons && project.lessons.length > 0 && (
            <div>
              <h2 class="mb-4 text-2xl font-bold text-white">
                Lessons Learned
              </h2>
              <ul class="space-y-3">
                {project.lessons.map((lesson) => (
                  <li class="flex items-start">
                    <span class="mr-2 text-emerald-400">•</span>
                    <span class="text-gray-300">{lesson}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>

        <!-- Right Column - Project Info -->
        <div class='lg:col-span-1'>
          <div class='sticky top-24 space-y-8'>
            <!-- Technologies -->
            <div
              class='card-light rounded-xl border border-neutral-700 bg-neutral-800/50 p-6'
            >
              <h3 class='mb-4 text-xl font-bold text-white'>
                Technologies Used
              </h3>
              <div class='tags-light-mode flex flex-wrap gap-2'>
                {project.technologies.map((tech) => (
                  <span class="rounded-full border border-emerald-500/20 bg-emerald-500/10 px-3 py-1 text-sm text-emerald-300">
                    {tech}
                  </span>
                ))}
              </div>
            </div>

            <!-- Project Links -->
            <div
              class='card-light rounded-xl border border-neutral-700 bg-neutral-800/50 p-6'
            >
              <h3 class='mb-4 text-xl font-bold text-white'>Project Links</h3>
              <div class='space-y-3'>
                <a
                  href={project.link}
                  target='_blank'
                  rel='noopener noreferrer'
                  class='flex items-center text-gray-300 transition-colors duration-200 hover:text-emerald-400'
                >
                  <FaExternalLinkAlt className='mr-2' />
                  Live Demo
                </a>
                {project.repoLink && (
                  <a
                    href={project.repoLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center text-gray-300 transition-colors duration-200 hover:text-emerald-400"
                  >
                    <FaGithub className="mr-2" />
                    Source Code
                  </a>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <Footer client:load />
</Base>

<script>
  // Initialize theme from localStorage
  document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.className = savedTheme + '-mode';
  });
</script>

<style>
  /* Button styles that preserve white text in both light and dark mode */
  :global(.dark-light-button) {
    border-color: var(--border-color, #334155) !important;
    background-color: var(--bg-color, #1e293b) !important;
    color: white !important;
  }

  :global(html.light-mode .dark-light-button) {
    border-color: #cbd5e1 !important;
    background-color: #64748b !important;
  }

  :global(html.light-mode .dark-light-button:hover) {
    background-color: #475569 !important;
  }

  /* Ensure technology tags keep proper styling in light mode */
  :global(html.light-mode .tags-light-mode span) {
    background-color: rgba(236, 253, 245, 0.8) !important;
    border-color: rgba(16, 185, 129, 0.2) !important;
    color: #059669 !important;
  }
</style>
